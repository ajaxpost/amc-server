<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amc.mapper.ErrorMapper">

    <insert id="save">
        insert into error (
        error_id,
        project_id,
        city,
        province,
        ip,
        page_url,
        sdk_version,
        type,
        time,
        user_id,
        route_id,
        ses_id,
        record_screen_id,
        line_number,
        column_number,
        error_msg,
        error_stack,
        device_info,
        bread_crumb
        ) values (
        #{errorId},
        #{apiKey},
        #{city},
        #{province},
        #{ip},
        #{pageUrl},
        #{sdkVersion},
        #{type},
        #{time},
        #{userId},
        #{routeId},
        #{sesId},
        #{recordScreenId},
        #{lineNumber},
        #{columnNumber},
        #{errorMsg},
        #{errorStack},
        #{deviceInfo},
        #{breadCrumb, typeHandler=com.amc.typeHandler.ListTypeHandler, jdbcType=VARCHAR}
        )
    </insert>


    <resultMap id="listMap" type="errorConfig">
        <result column="project_id" property="apiKey"/>
    </resultMap>

    <select id="list" resultMap="listMap">
        select * from error
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="startDate != null and endDate != null">
                and time between #{startDate} and #{endDate}
            </if>
        </where>
    </select>

    <select id="listByType" resultMap="listMap">
        select
        project_id,
        error_id,
        error_msg,
        type,
        type,
        time
        from error
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="startDate != null and endDate != null">
                and time between #{startDate} and #{endDate}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
        </where>
    </select>

    <select id="getErrorConfigById" resultMap="listMap">
        select * from error where error_id = #{id}
    </select>

    <select id="selectErrorCountByNum" resultType="map">
        select count(user_id) as c1 ,count(DISTINCT user_id) as c2 from error
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="errorMsg != null">
                and error_msg = #{errorMsg}
            </if>
            <if test="errorId != null">
                and error_stack in (SELECT
                error_stack
                FROM
                error
                WHERE
                project_id = #{pid}
                AND error_id = #{errorId})
            </if>
        </where>
    </select>

    <select id="selectErrorCountListByHour" resultType="hourDataType">
        select FROM_UNIXTIME(time / 1000,"%m-%d %H") as hour,count(FROM_UNIXTIME(time / 1000,"%m-%d %H")) as count from
        error
        where project_id = #{pid}
        and
        FROM_UNIXTIME(time / 1000,"%Y-%m-%d") = #{day}
        and error_msg = #{errorMsg}
        GROUP BY hour
    </select>

    <select id="selectErrorCountListByMinute" resultType="minuteDataType">
        select FROM_UNIXTIME(time / 1000,"%H:%i") as minute,count(FROM_UNIXTIME(time / 1000,"%H:%i"))
        as count from error
        where
        project_id = #{pid}
        and
        error_msg = #{errorMsg}
        and
        FROM_UNIXTIME(time / 1000,"%Y-%m-%d %H") = #{day}
        GROUP BY minute
    </select>

</mapper>