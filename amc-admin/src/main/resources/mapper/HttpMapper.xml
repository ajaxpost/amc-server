<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amc.mapper.HttpMapper">
    <insert id="save">
        insert into http
        (
        http_id,
        project_id,
        begin_time,
        end_time,
        city,
        ip,
        province,
        page_url,
        route_id,
        sdk_version,
        ses_id,
        time,
        time_stamp,
        type,
        user_id,
        device_info,
        status,
        http_info
        ) values
        <foreach collection="list" item="item" separator=",">
            (
            null,
            #{item.apiKey},
            #{item.beginTime},
            #{item.endTime},
            #{item.city},
            #{item.ip},
            #{item.province},
            #{item.pageUrl},
            #{item.routeId},
            #{item.sdkVersion},
            #{item.sesId},
            #{item.time},
            #{item.timeStamp},
            #{item.type},
            #{item.userId},
            #{item.deviceInfo},
            #{item.httpInfo.status},
            #{item.httpInfo}
            )
        </foreach>
    </insert>

    <resultMap id="httpMap" type="httpPOJO">
        <id column="http_id" property="httpId"/>
        <result column="project_id" property="apiKey"/>
        <result column="begin_time" property="beginTime"/>
        <result column="end_time" property="endTime"/>
        <result column="city" property="city"/>
        <result column="ip" property="ip"/>
        <result column="province" property="province"/>
        <result column="page_url" property="pageUrl"/>
        <result column="route_id" property="routeId"/>
        <result column="sdk_version" property="sdkVersion"/>
        <result column="ses_id" property="sesId"/>
        <result column="time" property="time"/>
        <result column="time_stamp" property="timeStamp"/>
        <result column="type" property="type"/>
        <result column="user_id" property="userId"/>
        <result column="device_info" property="deviceInfo"/>
        <result column="status" property="status"/>
        <result column="http_info" property="httpInfo"/>
        <result column="d" property="httpInfo"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="getHttpErrorCountByDay" resultMap="httpMap">
        select *,count(*) as count,
        ROUND(count(*) * 100.0 / (select count(*) as count from http
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="startDate != null and endDate != null">
                and time between #{startDate} and #{endDate}
            </if>
        </where>
        ),2) as round
        from http
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="startDate != null and endDate != null">
                and time between #{startDate} and #{endDate}
            </if>
            and status >= 400 or status = 0 GROUP BY status
        </where>
    </select>

    <select id="getStatusListGroupByErrorCode" resultMap="httpMap">
        select *,count(*) as count from http
        <where>
            <if test="pid != null">
                and project_id = #{pid}
            </if>
            <if test="date != null">
                and FROM_UNIXTIME(time / 1000,"%Y-%m-%d") = #{date}
            </if>
            and status >= 400 or status = 0 GROUP BY status
        </where>
    </select>

    <select id="getHttpOverflow" resultMap="httpMap">

        select avg(time_stamp) as time_stamp,FROM_UNIXTIME(time / 1000,"%m-%d %H:%i") as day,
        ((
        select count(1) from http where project_id = #{pid} and status = 200
        and FROM_UNIXTIME(time / 1000,"%m-%d %H:%i") = day
        ) / count(1)) * 100 as success_rate,
        count(1) as count
        from http where project_id = #{pid}
        and time between #{startDate} and #{endDate}
        GROUP BY FROM_UNIXTIME(time / 1000,"%m-%d %H:%i")
    </select>

    <select id="getHttpTop" resultMap="httpMap">
        select
        http_info as d,
        (
        select count(http_info) from http where project_id = #{pid} and status = 200 and http_info = d
        ) / count(1) * 100 as successRate,avg(time_stamp) as time_stamp,count(1) as count from http where project_id =
        #{pid} GROUP BY http_info

    </select>
</mapper>
